@page "/contact"

<PageTitle>Simple Contact Manager</PageTitle>

@using BlazorApp.Data
@inject ContactsService ContactService

<h1>Conctact Manager</h1>

<p>This component is a simple contacts manager</p>

@if (contacts == null)
{
    <p><em>Loading.....</em></p>
}
else{
    <div>
        <div class="action-conatiner">
            @{
                if(selectedContact == null){
                    isDisabled = true;
                }else{
                    isDisabled = false;
                }
            }
            <button class="btn btn-primary" @onclick="@(addContact)" data-bs-toggle="modal" data-bs-target="#staticBackdrop" >Add</button>
            <button class="btn btn-info" disabled=@isDisabled >Edit</button>
            <button class="btn btn-danger" disabled=@isDisabled >Delete</button>
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Number</th>
                    <th>Email</th>
                    <th>Date of creating</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var contact in contacts)
                {
                    <tr @onclick="@(e => onSelected(@contact))" class="@(selectedContact?.Name == contact.Name ? "selected" : null)" >
                        <td>@contact.Name</td>
                        <td>@contact.Number</td>
                        <td>@contact.Email</td>
                        <td>@contact.Date.ToShortDateString()</td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form>
                            <div class="form-group">
                                <div class="form-group mb-2">
                                    <label for="inputEmail4">Nom</label>
                                    <input type="text" class="form-control" id="inputEmail4" placeholder="Email">
                                </div>
                                <div class="form-group mb-2">
                                    <label for="inputEmail4">Number</label>
                                    <input type="number" class="form-control" id="inputEmail4" placeholder="Number">
                                </div>
                                <div class="form-group mb-2">
                                    <label for="inputPassword4">Email</label>
                                    <input type="email" class="form-control" id="inputPassword4" placeholder="Password">
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code{
    private List<Contact>? contacts;
    private bool @isDisabled = false;
    private Contact? selectedContact;

    private void onSelected (Contact cnt){
        selectedContact = cnt;
    }

    void addContact () {
        ContactService.AddContact(new Contact("alfred", "alfred01@gmail.com"));
    }
    protected override async Task OnInitializedAsync()
    {
        contacts = await ContactService.GetAllContacts();
    }

}